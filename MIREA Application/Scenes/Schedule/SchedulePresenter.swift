//
//  SchedulePresenter.swift
//  MIREA Application
//
//  Created by Кирилл Пигалкин on 04.08.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SchedulePresentationLogic {
    func presentTeachersList(with response: ScheduleModels.Teachers.Response)
    func presentClasses(with response: ScheduleModels.Classes.Response)
}

final class SchedulePresenter: SchedulePresentationLogic {
    weak var viewController: ScheduleDisplayLogic?
  
    func presentTeachersList(with response: ScheduleModels.Teachers.Response) {
        print("⭕️ presentTeachersList in SchedulePresenter")
        // Cleaning dirt in data from server
        let charset = CharacterSet(charactersIn: "а"..."я")
        let viewModel = response.filter {
            $0.name.lowercased().rangeOfCharacter(from: charset) != nil
        }
        viewController?.routeToPersonSettings(viewModel: viewModel)
    }
    
    func presentClasses(with response: ScheduleModels.Classes.Response) {
        let weekdayClasses = response.dayClasses[response.dayInfo.weekDay - 1]
        var viewModel = ScheduleModels.Classes.ViewModel()
        let isEven = response.dayInfo.weekNumber % 2 == 0
    
        let parityPath = isEven ? \ScheduleModels.Classes.ResponseValue.even : \ScheduleModels.Classes.ResponseValue.odd
        weekdayClasses.forEach { weekDay in
            weekDay.value[keyPath: parityPath].forEach { dayClasses in
                if dayClasses.weeks.contains(response.dayInfo.weekNumber) {
                    viewModel.append(dayClasses)
                }
            }
        }
        viewModel = viewModel.sorted { $0.number < $1.number }
        viewController?.displayDayClasses(viewModel: viewModel)
    }
}
