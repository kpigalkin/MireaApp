//
//  ScheduleViewController.swift
//  MIREA Application
//
//  Created by Кирилл Пигалкин on 04.08.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ScheduleDisplayLogic: AnyObject {
    func routeToPersonSettings(viewModel: ScheduleModels.Teachers.ViewModel)
    func displayDayClasses(viewModel: ScheduleModels.Classes.ViewModel)
}

protocol ScheduleVСDelegate: AnyObject {
    func getClassesForSpecificDay(weekDay: Int, weekNumber: Int)
    func setMonthLabel(month: String)
}

final class ScheduleViewController: UIViewController, ScheduleDisplayLogic, ScheduleVСDelegate {
    var interactor: ScheduleBusinessLogic?
    var router: (NSObjectProtocol & ScheduleRoutingLogic)?
    var scheduleView = ScheduleView()
    weak var scheduleViewDelegate: ScheduleViewDelegate?
    
    var monthView: UITextView = {
        let textView = UITextView(frame: CGRect(x: 0, y: 0, width: 120, height: 50))
        textView.backgroundColor = .clear
        textView.textAlignment = .center
        textView.isScrollEnabled = false
        textView.isEditable = false
        textView.font = .monospacedSystemFont(ofSize: 17, weight: .bold)
        textView.textColor = Color.defaultTheme.lightText
        return textView
    }()

  // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        print("⭕️ init in ScheduleViewController")
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = ScheduleInteractor()
        let presenter = SchedulePresenter()
        let router = ScheduleRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = self
        router.viewController = self
        scheduleView.scheduleVCDelegate = self
        scheduleViewDelegate = scheduleView
  }
  
    // MARK:  Routing
  
    func routeToPersonSettings(viewModel: ScheduleModels.Teachers.ViewModel) {
        router?.presentPersonSettings(teachersList: viewModel)
    }
  
    // MARK: View lifecycle
    
    override func loadView() {
        view = scheduleView
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigationBar()
        setupBackgroundColor()
    }
    
        // MARK:  Requests & Displaying
    
    func getTeachersList() {
        print("⭕️ getTeachers in ScheduleViewController")
        let request = ScheduleModels.Teachers.Request()
        interactor?.getTeachersList(with: request)
    }
    
    func getClassesForSpecificDay(weekDay: Int, weekNumber: Int) {
        print("⭕️ getClassesForSpecificDay in ScheduleViewController")
        let request = ScheduleModels.Classes.Request(weekDay: weekDay, weekNumber: weekNumber)
        interactor?.getDayClasses(with: request)
    }
    
    func displayDayClasses(viewModel: ScheduleModels.Classes.ViewModel) {
        scheduleViewDelegate?.showClasses(viewModel)
    }
    
    func setMonthLabel(month: String) {
//        navigationController?.navigationBar.topItem?.title = month
        monthView.text = month
    }
}

    // MARK:  Background color & NavBar

private extension ScheduleViewController {
    func setupNavigationBar() {
        let button = UIButton()
        button.setImage(
        UIImage(
            systemName: "person",
            withConfiguration: UIImage.SymbolConfiguration(pointSize: 25)),
        for: .normal)
        button.imageView?.tintColor = Color.defaultTheme.lightText
        button.addAction(UIAction() { [weak self] _ in
            self?.getTeachersList()
        },
            for: .touchUpInside)
        navigationItem.rightBarButtonItem = UIBarButtonItem(customView: button)
        navigationItem.titleView = monthView
    }

    func setupBackgroundColor() {
        view.backgroundColor = Color.defaultTheme.lightBlue
    }
}
