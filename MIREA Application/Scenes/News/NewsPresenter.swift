//
//  NewsPresenter.swift
//  MIREA Application
//
//  Created by Кирилл Пигалкин on 04.08.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsPresentationLogic {
    func presentNews(response: NewsModels.News.Response)
    func presentNewsElement(response: NewsModels.NewsElement.Response)
}

final class NewsPresenter: NewsPresentationLogic {
    weak var viewController: NewsDisplayLogic?
  
    func presentNews(response: NewsModels.News.Response) {
        print("⭕️ presentNews in NewsPresenter")
        
        var news = [NewsCollectionItem]()
        for item in response {
            let url = URL(string: item.image)
            let element = NewsCollectionItem(content: .news(config: .init(
                id: item.id, name: item.name, imageUrl: url
            )))
            news.append(element)
        }
        let viewModel = NewsModels.News.ViewModel(news)
        viewController?.displayNews(viewModel: viewModel)
    }
    
    func presentNewsElement(response: NewsModels.NewsElement.Response) {
        print("⭕️ presentNewsElement in NewsPresenter")

        let viewModel = NewsModels.NewsElement.ViewModel(
            id: response.id, title: response.title,
            date: formattingDate(date: response.date),
            text: response.text, image: response.image, url: response.url)
        viewController?.displayNewsElement(viewModel: viewModel)
    }
}

extension NewsPresenter {
    func formattingDate(date: String) -> String {
        guard let formatedDate = date.components(separatedBy: "T").first else { return date }
        return formatedDate
    }
}
