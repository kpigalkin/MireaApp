//
//  NewsViewController.swift
//  MIREA Application
//
//  Created by Кирилл Пигалкин on 04.08.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsDisplayLogic: AnyObject
{
  func displayNews(viewModel: NewsModels.News.ViewModel)
}

final class NewsViewController: UIViewController, NewsDisplayLogic
{
  var interactor: NewsBusinessLogic?
  var router: (NSObjectProtocol & NewsRoutingLogic & NewsDataPassing)?
    weak var newsViewDelegate: NewsViewDelegate?
    var newsView = NewsView()

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    print("⭕️ init in NewsViewController")
      
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = NewsInteractor()
    let presenter = NewsPresenter()
    let router = NewsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = self
    router.viewController = self
    router.dataStore = interactor
    
    newsViewDelegate = newsView
  }
  
  // MARK: Routing
  
//  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
//  {
//    if let scene = segue.identifier {
//      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
//      if let router = router, router.responds(to: selector) {
//        router.perform(selector, with: segue)
//      }
//    }
//  }
  
  // MARK: View lifecycle
    
    override func loadView() {
        print("⭕️ loadView in NewsViewController")
        
        super.loadView()
    }
  
    override func viewDidLoad() {
        print("⭕️ viewDidLoad in NewsViewController")
      
        super.viewDidLoad()
        self.view = newsView

        makeRequest()
    }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func makeRequest() {
      print("⭕️ makingRequest in NewsViewController")
      
      let request = NewsModels.News.Request(path: "/news")
      interactor?.getResponseFromMireaServer(request: request)
  }
  
    func displayNews(viewModel: NewsModels.News.ViewModel) {
        print("⭕️ displayNews in NewsViewController")
        newsView.showNews(viewModel)
    }
}
