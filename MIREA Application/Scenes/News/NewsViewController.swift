//
//  NewsViewController.swift
//  MIREA Application
//
//  Created by Кирилл Пигалкин on 04.08.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol NewsViewControllerDelegate: AnyObject {
    func userSelectedCell(id: Int)
    func showLastNews()
}

protocol NewsDisplayLogic: AnyObject {
    func displayNews(viewModel: NewsModels.News.ViewModel)
    func displayNewsElement(viewModel: NewsModels.NewsElement.ViewModel)
}

final class NewsViewController: UIViewController, NewsDisplayLogic {
    var interactor: NewsBusinessLogic?
    var router: (NSObjectProtocol & NewsRoutingLogic & NewsDataPassing)?
    var newsView = NewsView()
    weak var newsViewDelegate: NewsViewDelegate?

  // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        print("⭕️ init in NewsViewController")
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
  // MARK: Setup
  
    private func setup() {
        print("⭕️ setup in NewsViewController")
        
        let viewController = self
        let interactor = NewsInteractor()
        let presenter = NewsPresenter()
        let router = NewsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        newsView.newsViewControllerDelegate = self
        newsViewDelegate = newsView
    }
    
    func setupNavBar() {
//        navigationItem.title = nil
//        navigationItem.backButtonTitle = ""
//        navigationItem.titleView?.tintColor = .clear
        navigationController?.navigationBar.isHidden = true
    }
  
  // MARK: View lifecycle
    
    override func loadView() {
        print("⭕️ loadView in NewsViewController")
        view = newsView
        showLastNews()
        setupNavBar()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        showTabBar()
    }
    
  // MARK: Display methods
  
    func displayNews(viewModel: NewsModels.News.ViewModel) {
        print("⭕️ displayNews in NewsViewController")
        newsViewDelegate?.showNews(viewModel)
    }
    
    func displayNewsElement(viewModel: NewsModels.NewsElement.ViewModel) {
        print("⭕️ displaySpecificNews in NewsViewController")
        self.router?.displayNewsElement(viewModel: viewModel)
    }
}
    
    // MARK: NewsVCDelegate
    
extension NewsViewController: NewsViewControllerDelegate {
    
    func showLastNews() {
        print("⭕️ makingRequest in NewsViewController")
        let request = NewsModels.News.Request(limit: 20) /// User will choose 20 or 10 in future
        interactor?.getNewsFromServer(request: request)
    }
    
    func userSelectedCell(id: Int) {
        print("⭕️ userSelectedCell in NewsViewController")
        let request = NewsModels.NewsElement.Request.init(id: id)
        interactor?.getNewsElement(request: request)
    }
}
